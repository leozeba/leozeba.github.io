<!doctype html>
<html class="no-js" lang="">

<head>
  <meta charset="utf-8">
  <title>MEMORIAS | Your personal web3 database</title>
  <meta name="description" content="Collect, manage, safeguard, augment & share data">
  <meta name="viewport" content="width=device-width, initial-scale=1">

  <meta name="google-signin-client_id" content="24613691161-3a990mj8uer0uero52cml7u34odspqe6.apps.googleusercontent.com">

  <link rel="manifest" href="site.webmanifest">
  <link rel="apple-touch-icon" href="themes/default/icon.png">
  <!-- Place favicon.ico in the root directory -->
  <link rel="shortcut icon" href="themes/default/favicon.ico" />

  <!-- fontawesome.com -->
  <!-- <link rel="stylesheet" href="themes/default/css/all.min.css"> -->
  <!-- bulma.io -->
  <!-- <link rel="stylesheet" href="themes/default/css/bulma.min.css"> -->
  <!-- <link rel="stylesheet" href="themes/default/css/bulma-pageloader.min.css"> -->

  <!-- highlight.min.js -->
  <!-- <link rel="stylesheet" href="themes/default/css/styles/default.min.css"> -->

  <!-- bundle.css -->
  <link rel="stylesheet" href="themes/default/css/bundle.css">

  <!-- memori.as -->
  <link rel="stylesheet" href="themes/default/css/memori.as.css">

  <style>
    #recipients .button:hover {
      color: var(--color-4) !important;
    }

    .element.image, .element.video, .element.file {
      border-color: transparent;
      box-shadow: none;
    }

    .tags {
      margin-top: 1rem;
      margin-bottom: 0.5rem;
    }

    .tag.augment-label.color {
      border: 1px solid var(--color-0) !important;
    }
    .tag.augment-label.css {
      background: var(--color-4) !important;
      border: 1px solid var(--color-0) !important;
    }

    .tag.augment-face.age {
      border-color: var(--color-0) !important;
      color: var(--color-0) !important;
      background: var(--color-4) !important;
    }
  </style>
</head>

<body>

  <div id="app" style="display: hidden;" v-cloak>
    <!-- pageloader -->
    <div class="pageloader is-white">
      <span class="title">Loading...</span>
    </div>

    <section class="hero is-fullheight">
      <!-- navbar -->
      <nav class="navbar header" role="navigation" aria-label="main navigation">
        <div id="navbarBasicExample" class="navbar-menu">
          <div class="navbar-start">
              <a href="https://memori.as" target="_blank"><img src="themes/default/img/memorias.png" style="height: 3.25rem;"/></a>
          </div>
          <div class="navbar-end">
            <div id="actions">
              <div class="container-01">
                <div class="container-02">
                  <div class="field has-addons">
                    <a id="show-code" class="button button-1 is-medium is-circle" v-on:click="showCode()">
                      <span class="icon">
                        <!-- <i class="fa fa-share-alt"></i> -->
                        <i class="fas fa-code"></i>
                      </span>
                    </a>
                    <a id="hide-code" class="button is-medium is-circle is-borderless" v-on:click="hideCode()" style="display: none;">
                      <span class="icon">
                        <!-- <i class="fa fa-share-alt"></i> -->
                        <i class="fa fa-chevron-left"></i>
                      </span>
                    </a>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </nav>

      <!-- message -->
      <article class="message is-danger" style="display: none;">
        <div class="message-body" style="border-radius: 0;">
          <p style="font-size: 1.25rem;"></p>
        </div>
      </article>

      <!-- elements -->
      <div id="elements-container" class="hero-body">
        <div class="container">
          <div class="box-title" v-if="aio != null">
            <article class="media">
              <div class="media-left is-hidden-mobile">
                <div class="thumb is-circle" v-bind:style="'background-image: url(assets/author--' + aio.author.replace('::', '--') + '-picture.png); border: 1px solid var(--color-3);'">
                </div>
              </div>
              <div class="media-content">
                <div class="content">
                  <!-- Title -->
                  <p class="title">
                    <strong>
                      {{ title(aio) }}
                    </strong>
                  </p>
                  <!-- Tags -->
                  <div class="tags" v-if="tags(aio).length > 0">
                    <span class="tag is-medium is-rounded" v-for="(tag, index) in tags(aio)" style="margin-right: 0.5rem;">#{{ tag }}</span>
                    <span class="tag updated is-medium is-rounded">{{ aio.Updated }}{{ aio.updated }}</span>
                  </div>
                  <!-- Signature -->
                  <div class="signature">
                    <span class="icon-text tag sig is-medium is-rounded" v-if="aio != undefined && sig != ''">
                      <span class="icon">
                        <i class="fab fa-ethereum"></i>
                      </span>
                      <span v-bind:data-sig="sig">{{ sig.substring(0, 16) }}...{{ sig.substring(sig.length - 4) }}</span>
                    </span>
                  </div>
                  <!-- Recipients -->
                  <div class="recipients has-text-left">
                    <div class="field has-addons">
                      <div id="recipients" class="control" style="width: 100%; display: flex; background: transparent; padding: 0;">
                        <!-- author -->
                        <div class="author">
                          <button class="button is-rounded is-borderless is-fullwidth" v-bind:data-uuid="uuid('author')" style="border: 1px solid var(--color-3); justify-content: flex-start; margin: 0 0.5rem 0 0; border-radius: 5rem; padding-right: 0.25rem; cursor: default;">
                            <span class="has-badge-rounded has-badge-info">{{ uuid('author') }}</span>
                          </button>
                        </div>
                        <!-- recipient (uuid) -->
                        <div class="recipient" v-if="isRecipient('')">
                          <a class="button is-fullwidth" v-bind:data-uuid="uuid()" v-bind:title="uuid()" style="justify-content: flex-start; margin: 0; border-radius: 5rem; padding-right: 0.25rem;  background: var(--color-1); border-color: var(--color-1); color: var(--color-4); cursor: default; padding-left: 0.5rem; padding-right: 0.5rem;">
                            <span class="icon" style="width: 2rem; height: 2rem;" v-if="uuid('author') != uuid()">
                              <img v-bind:src="picture()" class="is-circle">
                            </span>
                            <span class="has-badge-rounded has-badge-info" v-if="uuid('author') == uuid()">{{ uuid() }}</span>
                          </a>
                        </div>
                        <!-- recipient (others) -->
                        <div class="recipient" v-for="(recipient, index) in aio.recipients">
                          <!-- "uuid() != recipient" -->
                          <a v-bind:href="'account.html?auid=' + recipient" class="button is-fullwidth" v-bind:data-uuid="recipient" v-bind:title="recipient" style="justify-content: flex-start; margin: 0; border-radius: 5rem; padding-right: 0.25rem; padding-left: 0.5rem; padding-right: 0.5rem;" v-if="recipient != 'app::public'">
                            <span class="icon" style="width: 2rem; height: 2rem;">
                              <img v-bind:src="accountPicture(recipient)" class="is-circle">
                            </span>
                            <span class="has-badge-rounded has-badge-info" v-if="index < 0">{{ recipient }}</span>
                          </a>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
              <div class="media-right">
                <!-- app::public -->
                <p id="public" v-if="isRecipient('app::public')">
                  <span class="tag is-small" style="border-radius: 2rem; background: var(--color-0); color: var(--color-4);">app::public</span>
                  <span class="tag is-small" style="border-radius: 2rem; background: var(--color-4); color: var(--color-1);"><a id="www" v-bind:href="'https://memori.as/app::public/' + uuid() + '/' + aio['Id'] + '/' + aio['Id'] + '.htm'" target="_blank">WWW</a></span>
                  <span class="tag is-small" style="border-radius: 2rem; background: var(--color-4); color: var(--color-1);"><a id="ipfs" v-bind:href="'https://ipfs.filebase.io/ipfs/' + aio['Ipfs']" target="_blank">IPFS</a></span>
                  <span class="tag is-small" style="border-radius: 2rem; background: var(--color-4); color: var(--color-1);"><a id="mem" v-bind:href="'https://memori.as/app::public/app::memori.as/' + aio['Mem'] + '.zip'" target="_blank">MEM</a></span>
                </p>
              </div>
            </article>
          </div>

          <!-- content -->
          <div id="content" class="column" style="min-height: 40rem;">
            <div id="elements">
            </div>
          </div>

          <hr>

          <!-- box-reply -->
          <div id="reply-aio" class="column" v-if="aio != null && aio.Reply != undefined && aio.Reply != ''" style="padding: 0.75rem;">
            <div class="box box-reply">
              <article class="media">
                  <div class="media-left">
                    <figure class="image is-96x96">
                      <img v-if="uuid() == replyAuthor(aio.Reply)" v-bind:src="picture()" class="is-circle">
                      <img v-else v-bind:src="replyProfileImageUrl(aio.Reply)" class="is-circle">
                    </figure>
                  </div>

                  <div class="media-content">
                    <div class="content">
                      <p id="title" class="title" style="padding-left: 0; margin-top: 0; font-size: 2.5rem; margin-bottom: 0; font-family: 'Roboto Slab', serif;">
                        <strong>
                          <a v-bind:href="'viewer.html?aio=' + replyAio(aio.Reply) + '&author=' + replyAuthor(aio.Reply)" style="color:var(--color-0);">{{ replyTitle(aio.Reply) }}</a>
                        </strong>
                      </p>
                    </div>
                    <div class="tags">
                      <span class="tag is-medium is-rounded is-black" v-if="uuid() == replyAuthor(aio.Reply)" style="cursor: default;">{{ replyAuthor(aio.Reply) }}</span>
                      <span class="tag is-medium is-rounded is-black" v-else>{{ replyAuthor(aio.Reply) }}</span>

                      <span class="tag is-medium is-rounded" v-for="(tag, index) in tags(aio)" style="margin-right: 0.5rem;">{{ '#' + tag }}</span>
                      <span class="tag updated is-medium is-rounded">{{ replyUpdated(aio.Reply) }}</span>
                    </div>
                  </div>

                  <div class="media-right">
                  </div>
                </article>
            </div>
          </div>

        </div>
      </div>

      <!-- code -->
      <div id="code-container" class="hero-body" style="display: none;">
        <div class="container">
          <div class="box">
            <pre style="background: var(--color-0) !important; color: var(--color-4) !important; padding: 0rem 1.5rem;">
              <code id="cod" class="language-bash" style="background: var(--color-0) !important; color: var(--color-4) !important; font-size: 1rem;">#
# Download MEMORIAS
# git clone https://github.com/leozeba/MEMORIAS
#
go run MEMORIAS.go --verify IPFS_URL</code>
            </pre>
          </div>

          <div class="box">
            <h1 class="title">What is a MEMORIA?</h1>
            <br/>
            <p class="subtitle">
              A MEMORIA is a JSON token file with the following attributes:
              <table class="table is-fullwidth">
                <thead>
                  <tr>
                    <th>Attribute</th>
                    <th>Type</th>
                    <th>Description</th>
                  </tr>
                </thead>
                <tbody>
                  <tr>
                    <td><b>author</b></td>
                    <td>string</td>
                    <td>The creator of the MEMORIA</td>
                  </tr>
                  <tr>
                    <td><b>title</b></td>
                    <td>string</td>
                    <td>The title of the content (Every word starting with # is a tag)</td>
                  </tr>
                  <tr>
                    <td><b>recipients</b></td>
                    <td>[]string</td>
                    <td>A list containing the recipients of the content</td>
                  </tr>
                  <tr>
                    <td><b>reply</b></td>
                    <td>string</td>
                    <td>The MEMORIA this one is a reply or linked to, if any.</td>
                  </tr>
                  <tr>
                    <td><b>created</b></td>
                    <td>string</td>
                    <td>Timestamp of the creation.</td>
                  </tr>
                  <tr>
                    <td><b>updated</b></td>
                    <td>string</td>
                    <td>Timestamp of the last update.</td>
                  </tr>
                  <tr>
                    <td><b>elements</b></td>
                    <td>[]json</td>
                    <td>A collection of elements of the following types: <b>text, image, video, audio, file, brain</b></td>
                  </tr>
                </tbody>
              </table>

              Each element within the collection is characterized by a set of common attributes:

              <table class="table is-fullwidth" style="margin-top: 1.5rem;">
                <tbody>
                  <tr>
                    <td><b>id</b></td>
                    <td>string</td>
                    <td>A unique identifier for the element</td>
                  </tr>
                  <tr>
                    <td><b>type</b></td>
                    <td>string</td>
                    <td>The content-type of the element (text, image, video, audio, file, brain)</td>
                  </tr>
                  <tr>
                    <td><b>data</b></td>
                    <td>json</td>
                    <td>Used for custom metadata depending of the content-type</td>
                  </tr>
                  <tr>
                    <td><b>param</b></td>
                    <td>string</td>
                    <td>Hash (SHA3-512) of the content file alongside the content-type</td>
                  </tr>
                </tbody>
              </table>

              <ul style="list-style: disc; margin-left: 2rem;">
                <li style="list-style: none; color: var(--color-1); margin-top: 1.5rem;">
                  Example: "020aca4164b392d9...83dd4a271b889660.jpeg"<br/><br/>
                  This structure ensures a standardized format for storing and exchanging diverse types of content within the JSON token file.
                </li>
              </ul>
              <br>
            </p>
            <pre><code id="aio" class="language-json"></code></pre>
          </div>
          <div class="box">
            <h1 class="title">How to verify this MEMORIA?</h1>
            <br/>
            <p class="subtitle">
              To validate the content in this MEMORIA we need to download the MEM file (zip) containing
              all assets referenced in the elements of the MEMORIA:

              <ul style="list-style: disc; margin-left: 2rem;">
                <li>Download the MEM file from <span id="ipfs-url"><a href="IPFS_URL">IPFS_URL</a><span>;</li>
                <li>Unzip the file;</li>
                <li>For element in the MEMORIA, we need to calculate the hash (SHA3-512) of the file in the <b>assets/</b> folder;</li>
                <li style="list-style: none; color: var(--color-1);">
                  The hash of each asset must match the prefix of the <b>param</b> value in the element.
                  <br>
                  This will guarantee that the assets in this MEMORIA are valid and have not been tampered.
                </li>
              </ul>
            </p>
          </div>

          <div class="box" v-if="sig != ''">
            <h1 class="title">How to verify the signature of this MEMORIA?</h1>
            <br/>
            <p class="subtitle">
              To verify the signature of a signed MEMORIA we need to:
              <ul style="list-style: disc; margin-left: 2rem;">
                <li>Recover the signer's public key from the signature (.sig) and MEMORIA (.aio);</li>
                <li>Recover the signer's address from the public key</li>
                <li style="list-style: none; color: var(--color-1);">
                  The recovered address must match the suffix of the "author" of MEMORIA.
                </li>
              </ul>
            </p>
            <pre><code id="sig" class="language-json"></code></pre>
          </div>

          <div class="box" v-if="aug != ''">
            <h1 class="title">Augmented Inteligent Output</h1>
            <br/>
            <p class="subtitle">
              These are the augmentations for this MEMORIA. It disclaims the models used for augmenting every element
              as well as their results. It's a JSON file with the (.aug) extension. <a id="show-content" v-on:click="showContent()"><b>(show)</b><a id="hide-content" v-on:click="hideContent()" style="display: none;"><b>(hide)</b></a>
            </p>
            <pre id="the-content" style="display: none;"><code id="aug" class="language-json"></code></pre>
          </div>
        </div>
      </div>

      <!-- navbar -->
      <nav class="navbar footer" role="navigation" aria-label="main navigation">
        <div id="navbarBasicExample" class="navbar-menu">
          <div class="navbar-start">
          </div>
          <div class="navbar-end">
          </div>
        </div>
      </nav>
    </section>
  </div>

  <!-- vue.js -->
  <script src="themes/default/js/vue.js"></script>
  <script src="themes/default/js/axios.min.js"></script>
  <!-- fontawesome.com -->
  <script src="themes/default/js/all.min.js"></script>
  <!-- http://www.jacklmoore.com/autosize/ -->
  <script src="themes/default/js/autosize.min.js"></script>

  <!-- d3.js -->
  <script src="themes/default/js/d3.min.js"></script>
  <!-- https://www.jasondavies.com/wordcloud/ -->
  <script src="themes/default/js/d3.layout.cloud.js"></script>

  <!-- highlight.min.js -->
  <script src="themes/default/js/highlight.min.js"></script>
  <script>hljs.highlightAll();</script>

  <!-- m.js -->
  <script src="themes/default/js/m.js"></script>
  <!-- m.xhr.js -->
  <script src="themes/default/js/m.xhr.js"></script>

  <script>
    window.addEventListener('load', function(){
      var APP = new Vue({
        el: "#app",
        data: {
          e: 0,
          aio: null,
          sig: null,
          aug: null,
          accounts: [],
          recipients: [],
          aioToSign: null
        },
        methods: {
          minit: function() {
            console.log("> minit");
            this.mload();
          },
          mload: function() {
            console.log("> mload");

            var elements = [];

            var aio = `{"author":"github::@leozeba","title":"The title!  #tag1 #tag2 #tag3","recipients":["app::public"],"reply":"","created":"2024-11-30 22:32:49","updated":"2024-11-30 22:32:49","elements":[{"id":"image-1","type":"image","param":"b8b6ede456b5acdc225faa4c6425149e7040ca85d46244cf598e7d0d984f1ebaefd422961497bef57aa249571a3fd9a8b907426ef5bfd2841a121c2dcea9ceac.png","data":{"name":""}}]}`;
            aio = aio.replace(/\n/g, "\\n");

            var aug = `{"image-1":{"augment":{"faces":{"FaceDetails":[{"AgeRange":{"High":54,"Low":46},"Beard":{"Confidence":96.91663,"Value":false},"BoundingBox":{"Height":0.016094549,"Left":0.12402567,"Top":0.8923654,"Width":0.0260849},"Confidence":99.014824,"Emotions":[{"Confidence":58.980473,"Type":"CALM"},{"Confidence":13.525391,"Type":"SAD"},{"Confidence":3.1789143,"Type":"CONFUSED"},{"Confidence":0.8788109,"Type":"SURPRISED"},{"Confidence":0.5630493,"Type":"HAPPY"},{"Confidence":0.18339157,"Type":"DISGUSTED"},{"Confidence":0.044584274,"Type":"ANGRY"},{"Confidence":0.023722649,"Type":"FEAR"}],"EyeDirection":{"Confidence":9.301062e-9,"Pitch":14.452658,"Yaw":5.104372},"Eyeglasses":{"Confidence":99.81311,"Value":false},"EyesOpen":{"Confidence":96.536026,"Value":true},"FaceOccluded":{"Confidence":99.716606,"Value":true},"Gender":{"Confidence":99.763,"Value":"Female"},"Landmarks":[{"Type":"eyeLeft","X":0.12697144,"Y":0.896414},{"Type":"eyeRight","X":0.13443781,"Y":0.89728236},{"Type":"mouthLeft","X":0.12631354,"Y":0.9020498},{"Type":"mouthRight","X":0.13254192,"Y":0.9028166},{"Type":"nose","X":0.12597252,"Y":0.89972305},{"Type":"leftEyeBrowLeft","X":0.12591115,"Y":0.89496624},{"Type":"leftEyeBrowRight","X":0.12751244,"Y":0.895036},{"Type":"leftEyeBrowUp","X":0.1261172,"Y":0.8945358},{"Type":"rightEyeBrowLeft","X":0.1318752,"Y":0.89549136},{"Type":"rightEyeBrowRight","X":0.13901898,"Y":0.8964355},{"Type":"rightEyeBrowUp","X":0.13489832,"Y":0.89547056},{"Type":"leftEyeLeft","X":0.12616372,"Y":0.89626855},{"Type":"leftEyeRight","X":0.12848012,"Y":0.8966642},{"Type":"leftEyeUp","X":0.12680212,"Y":0.89614594},{"Type":"leftEyeDown","X":0.12693712,"Y":0.8966721},{"Type":"rightEyeLeft","X":0.13299422,"Y":0.8971811},{"Type":"rightEyeRight","X":0.13634548,"Y":0.89744323},{"Type":"rightEyeUp","X":0.13433146,"Y":0.897009},{"Type":"rightEyeDown","X":0.13436575,"Y":0.8975364},{"Type":"noseLeft","X":0.12694408,"Y":0.9001713},{"Type":"noseRight","X":0.12979098,"Y":0.9004903},{"Type":"mouthUp","X":0.12770362,"Y":0.90160567},{"Type":"mouthDown","X":0.127899,"Y":0.90325177},{"Type":"leftPupil","X":0.12697144,"Y":0.896414},{"Type":"rightPupil","X":0.13443781,"Y":0.89728236},{"Type":"upperJawlineLeft","X":0.12876803,"Y":0.89632547},{"Type":"midJawlineLeft","X":0.12810321,"Y":0.9021834},{"Type":"chinBottom","X":0.12905146,"Y":0.9060316},{"Type":"midJawlineRight","X":0.1417588,"Y":0.9036788},{"Type":"upperJawlineRight","X":0.14539634,"Y":0.89813006}],"MouthOpen":{"Confidence":94.26183,"Value":true},"Mustache":{"Confidence":99.89936,"Value":false},"Pose":{"Pitch":0.822192,"Roll":5.805988,"Yaw":-54.411182},"Quality":{"Brightness":94.31773,"Sharpness":1.866628},"Smile":{"Confidence":96.56416,"Value":false},"Sunglasses":{"Confidence":99.78271,"Value":false}},{"AgeRange":{"High":30,"Low":24},"Beard":{"Confidence":76.84949,"Value":false},"BoundingBox":{"Height":0.012153098,"Left":0.7103424,"Top":0.8970644,"Width":0.028978068},"Confidence":73.48277,"Emotions":[{"Confidence":37.270626,"Type":"FEAR"},{"Confidence":23.689236,"Type":"CALM"},{"Confidence":7.6700845,"Type":"HAPPY"},{"Confidence":5.9432983,"Type":"SURPRISED"},{"Confidence":2.1224976,"Type":"ANGRY"},{"Confidence":1.247406,"Type":"DISGUSTED"},{"Confidence":0.5865097,"Type":"CONFUSED"},{"Confidence":0.5699158,"Type":"SAD"}],"EyeDirection":{"Confidence":99.85084,"Pitch":25.805086,"Yaw":-12.387099},"Eyeglasses":{"Confidence":99.47058,"Value":false},"EyesOpen":{"Confidence":76.13471,"Value":true},"FaceOccluded":{"Confidence":85.43657,"Value":true},"Gender":{"Confidence":67.999,"Value":"Female"},"Landmarks":[{"Type":"eyeLeft","X":0.7186458,"Y":0.9048197},{"Type":"eyeRight","X":0.7190061,"Y":0.90323406},{"Type":"mouthLeft","X":0.7251568,"Y":0.904721},{"Type":"mouthRight","X":0.7255601,"Y":0.9034169},{"Type":"nose","X":0.7212679,"Y":0.90605044},{"Type":"leftEyeBrowLeft","X":0.7178733,"Y":0.9046836},{"Type":"leftEyeBrowRight","X":0.71687055,"Y":0.9051729},{"Type":"leftEyeBrowUp","X":0.71668243,"Y":0.90527815},{"Type":"rightEyeBrowLeft","X":0.7169936,"Y":0.90422505},{"Type":"rightEyeBrowRight","X":0.71841097,"Y":0.9019015},{"Type":"rightEyeBrowUp","X":0.7169641,"Y":0.9033798},{"Type":"leftEyeLeft","X":0.71878946,"Y":0.90484715},{"Type":"leftEyeRight","X":0.71890825,"Y":0.9044919},{"Type":"leftEyeUp","X":0.71836036,"Y":0.90492666},{"Type":"leftEyeDown","X":0.7190095,"Y":0.904821},{"Type":"rightEyeLeft","X":0.7191044,"Y":0.9035353},{"Type":"rightEyeRight","X":0.719277,"Y":0.90267694},{"Type":"rightEyeUp","X":0.7186999,"Y":0.903324},{"Type":"rightEyeDown","X":0.71937406,"Y":0.903242},{"Type":"noseLeft","X":0.72254837,"Y":0.9051076},{"Type":"noseRight","X":0.72268367,"Y":0.9044882},{"Type":"mouthUp","X":0.72395974,"Y":0.9049797},{"Type":"mouthDown","X":0.725989,"Y":0.9046907},{"Type":"leftPupil","X":0.7186458,"Y":0.9048197},{"Type":"rightPupil","X":0.7190061,"Y":0.90323406},{"Type":"upperJawlineLeft","X":0.72083265,"Y":0.90267104},{"Type":"midJawlineLeft","X":0.72697264,"Y":0.90276563},{"Type":"chinBottom","X":0.7294828,"Y":0.9038073},{"Type":"midJawlineRight","X":0.72754526,"Y":0.8997998},{"Type":"upperJawlineRight","X":0.72144014,"Y":0.89909923}],"MouthOpen":{"Confidence":78.17291,"Value":false},"Mustache":{"Confidence":96.2072,"Value":false},"Pose":{"Pitch":-21.857374,"Roll":72.718605,"Yaw":3.2303698},"Quality":{"Brightness":95.54514,"Sharpness":1.3998106},"Smile":{"Confidence":96.06619,"Value":false},"Sunglasses":{"Confidence":98.94335,"Value":false}}],"OrientationCorrection":"","ResultMetadata":{}},"labels":{"ImageProperties":{"Background":null,"DominantColors":[{"Blue":255,"CSSColor":"white","Green":255,"HexCode":"#ffffff","PixelPercent":71.82867,"Red":255,"SimplifiedColor":"white"},{"Blue":79,"CSSColor":"darkslategrey","Green":79,"HexCode":"#2f4f4f","PixelPercent":9.719934,"Red":47,"SimplifiedColor":"grey"},{"Blue":128,"CSSColor":"gray","Green":128,"HexCode":"#808080","PixelPercent":7.4958816,"Red":128,"SimplifiedColor":"grey"},{"Blue":192,"CSSColor":"silver","Green":192,"HexCode":"#c0c0c0","PixelPercent":7.2487645,"Red":192,"SimplifiedColor":"grey"},{"Blue":0,"CSSColor":"black","Green":0,"HexCode":"#000000","PixelPercent":1.8121911,"Red":0,"SimplifiedColor":"black"},{"Blue":205,"CSSColor":"blanchedalmond","Green":235,"HexCode":"#ffebcd","PixelPercent":1.4827018,"Red":255,"SimplifiedColor":"brown"},{"Blue":225,"CSSColor":"mistyrose","Green":228,"HexCode":"#ffe4e1","PixelPercent":0.24711697,"Red":255,"SimplifiedColor":"white"},{"Blue":0,"CSSColor":"red","Green":0,"HexCode":"#ff0000","PixelPercent":0.08237232,"Red":255,"SimplifiedColor":"red"},{"Blue":32,"CSSColor":"goldenrod","Green":165,"HexCode":"#daa520","PixelPercent":0.08237232,"Red":218,"SimplifiedColor":"brown"}],"Foreground":null,"Quality":{"Brightness":100,"Contrast":87.94439,"Sharpness":85.33933}},"LabelModelVersion":"3.0","Labels":[{"Aliases":[],"Categories":[{"Name":"Text and Documents"}],"Confidence":99.78745,"Instances":[],"Name":"Page","Parents":[{"Name":"Text"}]},{"Aliases":[],"Categories":[{"Name":"Text and Documents"}],"Confidence":99.78745,"Instances":[],"Name":"Text","Parents":[]},{"Aliases":[{"Name":"Human"}],"Categories":[{"Name":"Person Description"}],"Confidence":98.40686,"Instances":[{"BoundingBox":{"Height":0.13314754,"Left":0.31896317,"Top":0.13644563,"Width":0.08057035},"Confidence":98.40686,"DominantColors":[]},{"BoundingBox":{"Height":0.044241432,"Left":0.058302283,"Top":0.8869668,"Width":0.118349485},"Confidence":96.80155,"DominantColors":[]},{"BoundingBox":{"Height":0.051120393,"Left":0.6592203,"Top":0.87790376,"Width":0.1016891},"Confidence":94.001854,"DominantColors":[]},{"BoundingBox":{"Height":0.09224028,"Left":0.38863656,"Top":0.7099567,"Width":0.0977669},"Confidence":89.58947,"DominantColors":[]},{"BoundingBox":{"Height":0.038797464,"Left":0.16996017,"Top":0.8922157,"Width":0.03384178},"Confidence":87.85086,"DominantColors":[]},{"BoundingBox":{"Height":0.034099508,"Left":0.033511624,"Top":0.8964497,"Width":0.07825844},"Confidence":75.48506,"DominantColors":[]}],"Name":"Person","Parents":[]},{"Aliases":[],"Categories":[{"Name":"Hobbies and Interests"}],"Confidence":94.224075,"Instances":[],"Name":"Art","Parents":[]},{"Aliases":[],"Categories":[{"Name":"Hobbies and Interests"}],"Confidence":94.224075,"Instances":[],"Name":"Collage","Parents":[{"Name":"Art"}]}],"OrientationCorrection":"","ResultMetadata":{}},"models":{"faces":"Amazon Rekognition (Detect Faces 3.0)","labels":"Amazon Rekognition (Detect Labels 3.0)","text":"Amazon Rekognition (Detect Text 3.0)"},"text":{"TextDetections":[{"Confidence":99.23428,"DetectedText":"Late Edition","Geometry":{"BoundingBox":{"Height":0.0064225863,"Left":0.861328,"Top":0.045946196,"Width":0.07519531},"Polygon":[{"X":0.861328,"Y":0.045946196},{"X":0.9365233,"Y":0.045946196},{"X":0.9365233,"Y":0.052368782},{"X":0.861328,"Y":0.052368782}]},"Id":0,"ParentId":null,"Type":"LINE"},{"Confidence":69.337,"DetectedText":"Today sumbine warm low humid","Geometry":{"BoundingBox":{"Height":0.0059285415,"Left":0.82421875,"Top":0.053850915,"Width":0.14746094},"Polygon":[{"X":0.82421875,"Y":0.053850915},{"X":0.9716797,"Y":0.053850915},{"X":0.9716797,"Y":0.059779458},{"X":0.82421875,"Y":0.059779458}]},"Id":1,"ParentId":null,"Type":"LINE"},{"Confidence":98.628044,"DetectedText":"All the News","Geometry":{"BoundingBox":{"Height":0.0069166315,"Left":0.05859375,"Top":0.054839008,"Width":0.07910156},"Polygon":[{"X":0.05859375,"Y":0.054839008},{"X":0.13769531,"Y":0.054839008},{"X":0.13769531,"Y":0.06175564},{"X":0.05859375,"Y":0.06175564}]},"Id":2,"ParentId":null,"Type":"LINE"},{"Confidence":99.95884,"DetectedText":"The New York Times","Geometry":{"BoundingBox":{"Height":0.0457996,"Left":0.1875,"Top":0.043128517,"Width":0.6244687},"Polygon":[{"X":0.1875,"Y":0.043128517},{"X":0.8119687,"Y":0.043128517},{"X":0.8119687,"Y":0.08892812},{"X":0.1875,"Y":0.08892812}]},"Id":3,"ParentId":null,"Type":"LINE"},{"Confidence":70.3749,"DetectedText":"ky levels high NT Tonight partly","Geometry":{"BoundingBox":{"Height":0.0067979963,"Left":0.8241407,"Top":0.05901672,"Width":0.14861186},"Polygon":[{"X":0.8242387,"Y":0.05901672},{"X":0.9727526,"Y":0.059617806},{"X":0.97265464,"Y":0.06581471},{"X":0.8241407,"Y":0.06521363}]},"Id":4,"ParentId":null,"Type":"LINE"},{"Confidence":87.7002,"DetectedText":"Thats Fit to Print","Geometry":{"BoundingBox":{"Height":0.0069166315,"Left":0.047851562,"Top":0.06323777,"Width":0.10449219},"Polygon":[{"X":0.047851562,"Y":0.06323777},{"X":0.15234375,"Y":0.06323777},{"X":0.15234375,"Y":0.070154406},{"X":0.047851562,"Y":0.070154406}]},"Id":5,"ParentId":null,"Type":"LINE"},{"Confidence":72.98607,"DetectedText":"cloudy. low 72 Tomorrow sunny to","Geometry":{"BoundingBox":{"Height":0.007938443,"Left":0.82313395,"Top":0.064293,"Width":0.14862834},"Polygon":[{"X":0.823249,"Y":0.064293},{"X":0.9717623,"Y":0.06488832},{"X":0.97164726,"Y":0.07223144},{"X":0.82313395,"Y":0.07163612}]},"Id":6,"ParentId":null,"Type":"LINE"},{"Confidence":62.17378,"DetectedText":"party cloudy warm more human","Geometry":{"BoundingBox":{"Height":0.007365299,"Left":0.8230865,"Top":0.07038075,"Width":0.14971074},"Polygon":[{"X":0.8230865,"Y":0.071336985},{"X":0.9726371,"Y":0.07038075},{"X":0.9727972,"Y":0.07678981},{"X":0.8232466,"Y":0.07774605}]},"Id":7,"ParentId":null,"Type":"LINE"},{"Confidence":86.245384,"DetectedText":"high 90 Weather map. Page -","Geometry":{"BoundingBox":{"Height":0.006831126,"Left":0.82313335,"Top":0.0764827,"Width":0.14862446},"Polygon":[{"X":0.8232438,"Y":0.0764827},{"X":0.9717578,"Y":0.077165715},{"X":0.9716473,"Y":0.08331382},{"X":0.82313335,"Y":0.082630806}]},"Id":8,"ParentId":null,"Type":"LINE"},{"Confidence":93.24436,"DetectedText":"VOL.CLXIV ... No 56958","Geometry":{"BoundingBox":{"Height":0.0064225863,"Left":0.025390625,"Top":0.09337453,"Width":0.15527341},"Polygon":[{"X":0.025390625,"Y":0.09337453},{"X":0.18066403,"Y":0.09337453},{"X":0.18066403,"Y":0.099797115},{"X":0.025390625,"Y":0.099797115}]},"Id":9,"ParentId":null,"Type":"LINE"},{"Confidence":77.90351,"DetectedText":"e 2005 The New York Times","Geometry":{"BoundingBox":{"Height":0.004940451,"Left":0.21582031,"Top":0.094856665,"Width":0.09667969},"Polygon":[{"X":0.21582031,"Y":0.094856665},{"X":0.3125,"Y":0.094856665},{"X":0.3125,"Y":0.099797115},{"X":0.21582031,"Y":0.099797115}]},"Id":10,"ParentId":null,"Type":"LINE"},{"Confidence":80.3478,"DetectedText":"NEW YORK. FRIDAY AUGUST 142015","Geometry":{"BoundingBox":{"Height":0.0069166315,"Left":0.38378906,"Top":0.09337453,"Width":0.23144531},"Polygon":[{"X":0.38378906,"Y":0.09337453},{"X":0.6152344,"Y":0.09337453},{"X":0.6152344,"Y":0.100291155},{"X":0.38378906,"Y":0.100291155}]},"Id":11,"ParentId":null,"Type":"LINE"},{"Confidence":98.32363,"DetectedText":"$2.50","Geometry":{"BoundingBox":{"Height":0.0054344963,"Left":0.9404297,"Top":0.09337453,"Width":0.032226562},"Polygon":[{"X":0.9404297,"Y":0.09337453},{"X":0.97265625,"Y":0.09337453},{"X":0.97265625,"Y":0.09880902},{"X":0.9404297,"Y":0.09880902}]},"Id":12,"ParentId":null,"Type":"LINE"},{"Confidence":99.471565,"DetectedText":"Late","Geometry":{"BoundingBox":{"Height":0.0054344963,"Left":0.8613281,"Top":0.04644024,"Width":0.02734375},"Polygon":[{"X":0.8613281,"Y":0.04644024},{"X":0.8886719,"Y":0.04644024},{"X":0.8886719,"Y":0.05187474},{"X":0.8613281,"Y":0.05187474}]},"Id":13,"ParentId":0,"Type":"WORD"},{"Confidence":98.99701,"DetectedText":"Edition","Geometry":{"BoundingBox":{"Height":0.0064225863,"Left":0.89160156,"Top":0.045946196,"Width":0.044921875},"Polygon":[{"X":0.89160156,"Y":0.045946196},{"X":0.93652344,"Y":0.045946196},{"X":0.93652344,"Y":0.052368782},{"X":0.89160156,"Y":0.052368782}]},"Id":14,"ParentId":0,"Type":"WORD"},{"Confidence":67.75302,"DetectedText":"Today","Geometry":{"BoundingBox":{"Height":0.0059285415,"Left":0.82421875,"Top":0.053850915,"Width":0.02734375},"Polygon":[{"X":0.82421875,"Y":0.053850915},{"X":0.8515625,"Y":0.053850915},{"X":0.8515625,"Y":0.059779458},{"X":0.82421875,"Y":0.059779458}]},"Id":15,"ParentId":1,"Type":"WORD"},{"Confidence":28.859755,"DetectedText":"sumbine","Geometry":{"BoundingBox":{"Height":0.004940451,"Left":0.8535156,"Top":0.054344963,"Width":0.041015625},"Polygon":[{"X":0.8535156,"Y":0.054344963},{"X":0.89453125,"Y":0.054344963},{"X":0.89453125,"Y":0.059285413},{"X":0.8535156,"Y":0.059285413}]},"Id":16,"ParentId":1,"Type":"WORD"},{"Confidence":63.491844,"DetectedText":"warm","Geometry":{"BoundingBox":{"Height":0.004940451,"Left":0.8955078,"Top":0.054344963,"Width":0.02734375},"Polygon":[{"X":0.8955078,"Y":0.054344963},{"X":0.92285156,"Y":0.054344963},{"X":0.92285156,"Y":0.059285413},{"X":0.8955078,"Y":0.059285413}]},"Id":17,"ParentId":1,"Type":"WORD"},{"Confidence":98.033905,"DetectedText":"low","Geometry":{"BoundingBox":{"Height":0.004446406,"Left":0.9248047,"Top":0.054344963,"Width":0.015625},"Polygon":[{"X":0.9248047,"Y":0.054344963},{"X":0.9404297,"Y":0.054344963},{"X":0.9404297,"Y":0.05879137},{"X":0.9248047,"Y":0.05879137}]},"Id":18,"ParentId":1,"Type":"WORD"},{"Confidence":88.54647,"DetectedText":"humid","Geometry":{"BoundingBox":{"Height":0.0054344963,"Left":0.94140625,"Top":0.053850915,"Width":0.030273438},"Polygon":[{"X":0.94140625,"Y":0.053850915},{"X":0.9716797,"Y":0.053850915},{"X":0.9716797,"Y":0.059285413},{"X":0.94140625,"Y":0.059285413}]},"Id":19,"ParentId":1,"Type":"WORD"},{"Confidence":98.58062,"DetectedText":"All","Geometry":{"BoundingBox":{"Height":0.0059285415,"Left":0.05859375,"Top":0.05533305,"Width":0.022460938},"Polygon":[{"X":0.05859375,"Y":0.05533305},{"X":0.08105469,"Y":0.05533305},{"X":0.08105469,"Y":0.061261594},{"X":0.05859375,"Y":0.061261594}]},"Id":20,"ParentId":2,"Type":"WORD"},{"Confidence":98.73116,"DetectedText":"the","Geometry":{"BoundingBox":{"Height":0.0064225863,"Left":0.083984375,"Top":0.054839008,"Width":0.017578125},"Polygon":[{"X":0.083984375,"Y":0.054839008},{"X":0.1015625,"Y":0.054839008},{"X":0.1015625,"Y":0.061261594},{"X":0.083984375,"Y":0.061261594}]},"Id":21,"ParentId":2,"Type":"WORD"},{"Confidence":98.572365,"DetectedText":"News","Geometry":{"BoundingBox":{"Height":0.0069166315,"Left":0.10449219,"Top":0.054839008,"Width":0.033203125},"Polygon":[{"X":0.10449219,"Y":0.054839008},{"X":0.13769531,"Y":0.054839008},{"X":0.13769531,"Y":0.06175564},{"X":0.10449219,"Y":0.06175564}]},"Id":22,"ParentId":2,"Type":"WORD"},{"Confidence":100,"DetectedText":"The","Geometry":{"BoundingBox":{"Height":0.039029565,"Left":0.1875,"Top":0.04347597,"Width":0.11621094},"Polygon":[{"X":0.1875,"Y":0.04347597},{"X":0.30371094,"Y":0.04347597},{"X":0.30371094,"Y":0.08250553},{"X":0.1875,"Y":0.08250553}]},"Id":23,"ParentId":3,"Type":"WORD"},{"Confidence":100,"DetectedText":"New","Geometry":{"BoundingBox":{"Height":0.035571247,"Left":0.31249997,"Top":0.04545215,"Width":0.13378903},"Polygon":[{"X":0.31249997,"Y":0.04545215},{"X":0.446289,"Y":0.04545215},{"X":0.446289,"Y":0.081023395},{"X":0.31249997,"Y":0.081023395}]},"Id":24,"ParentId":3,"Type":"WORD"},{"Confidence":99.875465,"DetectedText":"York","Geometry":{"BoundingBox":{"Height":0.043970015,"Left":0.4560547,"Top":0.044958103,"Width":0.15625},"Polygon":[{"X":0.4560547,"Y":0.044958103},{"X":0.6123047,"Y":0.044958103},{"X":0.6123047,"Y":0.08892812},{"X":0.4560547,"Y":0.08892812}]},"Id":25,"ParentId":3,"Type":"WORD"},{"Confidence":99.959915,"DetectedText":"Times","Geometry":{"BoundingBox":{"Height":0.036671117,"Left":0.62136924,"Top":0.043128517,"Width":0.19059947},"Polygon":[{"X":0.6223942,"Y":0.043128517},{"X":0.8119687,"Y":0.04453891},{"X":0.8109437,"Y":0.07979963},{"X":0.62136924,"Y":0.078389235}]},"Id":26,"ParentId":3,"Type":"WORD"},{"Confidence":52.865673,"DetectedText":"ky","Geometry":{"BoundingBox":{"Height":0.004940451,"Left":0.82421875,"Top":0.060273502,"Width":0.0126953125},"Polygon":[{"X":0.82421875,"Y":0.060273502},{"X":0.83691406,"Y":0.060273502},{"X":0.83691406,"Y":0.065213956},{"X":0.82421875,"Y":0.065213956}]},"Id":27,"ParentId":4,"Type":"WORD"},{"Confidence":87.946106,"DetectedText":"levels","Geometry":{"BoundingBox":{"Height":0.0054344963,"Left":0.8388672,"Top":0.059779458,"Width":0.028320312},"Polygon":[{"X":0.8388672,"Y":0.059779458},{"X":0.8671875,"Y":0.059779458},{"X":0.8671875,"Y":0.065213956},{"X":0.8388672,"Y":0.065213956}]},"Id":28,"ParentId":4,"Type":"WORD"},{"Confidence":97.014465,"DetectedText":"high","Geometry":{"BoundingBox":{"Height":0.0059285415,"Left":0.8691406,"Top":0.059285413,"Width":0.021484375},"Polygon":[{"X":0.8691406,"Y":0.059285413},{"X":0.890625,"Y":0.059285413},{"X":0.890625,"Y":0.065213956},{"X":0.8691406,"Y":0.065213956}]},"Id":29,"ParentId":4,"Type":"WORD"},{"Confidence":27.88461,"DetectedText":"NT","Geometry":{"BoundingBox":{"Height":0.004940451,"Left":0.8925781,"Top":0.059779458,"Width":0.01171875},"Polygon":[{"X":0.8925781,"Y":0.059779458},{"X":0.9042969,"Y":0.059779458},{"X":0.9042969,"Y":0.06471991},{"X":0.8925781,"Y":0.06471991}]},"Id":30,"ParentId":4,"Type":"WORD"},{"Confidence":66.92321,"DetectedText":"Tonight","Geometry":{"BoundingBox":{"Height":0.0054344963,"Left":0.90722656,"Top":0.059779458,"Width":0.03515625},"Polygon":[{"X":0.90722656,"Y":0.059779458},{"X":0.9423828,"Y":0.059779458},{"X":0.9423828,"Y":0.065213956},{"X":0.90722656,"Y":0.065213956}]},"Id":31,"ParentId":4,"Type":"WORD"},{"Confidence":89.61534,"DetectedText":"partly","Geometry":{"BoundingBox":{"Height":0.0054344963,"Left":0.94628906,"Top":0.060273502,"Width":0.026367188},"Polygon":[{"X":0.94628906,"Y":0.060273502},{"X":0.97265625,"Y":0.060273502},{"X":0.97265625,"Y":0.065708},{"X":0.94628906,"Y":0.065708}]},"Id":32,"ParentId":4,"Type":"WORD"},{"Confidence":99.29301,"DetectedText":"Thats","Geometry":{"BoundingBox":{"Height":0.0054344963,"Left":0.047851562,"Top":0.06373182,"Width":0.034179688},"Polygon":[{"X":0.047851562,"Y":0.06373182},{"X":0.08203125,"Y":0.06373182},{"X":0.08203125,"Y":0.06916632},{"X":0.047851562,"Y":0.06916632}]},"Id":33,"ParentId":5,"Type":"WORD"},{"Confidence":74.72754,"DetectedText":"Fit","Geometry":{"BoundingBox":{"Height":0.0054344963,"Left":0.0859375,"Top":0.06373182,"Width":0.0146484375},"Polygon":[{"X":0.0859375,"Y":0.06373182},{"X":0.10058594,"Y":0.06373182},{"X":0.10058594,"Y":0.06916632},{"X":0.0859375,"Y":0.06916632}]},"Id":34,"ParentId":5,"Type":"WORD"},{"Confidence":97.73149,"DetectedText":"to","Geometry":{"BoundingBox":{"Height":0.0054344963,"Left":0.10449219,"Top":0.06422587,"Width":0.0107421875},"Polygon":[{"X":0.10449219,"Y":0.06422587},{"X":0.115234375,"Y":0.06422587},{"X":0.115234375,"Y":0.06966036},{"X":0.10449219,"Y":0.06966036}]},"Id":35,"ParentId":5,"Type":"WORD"},{"Confidence":79.04877,"DetectedText":"Print","Geometry":{"BoundingBox":{"Height":0.0069166315,"Left":0.11816406,"Top":0.06323777,"Width":0.034179688},"Polygon":[{"X":0.11816406,"Y":0.06323777},{"X":0.15234375,"Y":0.06323777},{"X":0.15234375,"Y":0.070154406},{"X":0.11816406,"Y":0.070154406}]},"Id":36,"ParentId":5,"Type":"WORD"},{"Confidence":70.91668,"DetectedText":"cloudy.","Geometry":{"BoundingBox":{"Height":0.0069166315,"Left":0.8232422,"Top":0.06471991,"Width":0.032226562},"Polygon":[{"X":0.8232422,"Y":0.06471991},{"X":0.85546875,"Y":0.06471991},{"X":0.85546875,"Y":0.07163654},{"X":0.8232422,"Y":0.07163654}]},"Id":37,"ParentId":6,"Type":"WORD"},{"Confidence":96.20826,"DetectedText":"low","Geometry":{"BoundingBox":{"Height":0.004940451,"Left":0.8564453,"Top":0.065708,"Width":0.015625},"Polygon":[{"X":0.8564453,"Y":0.065708},{"X":0.8720703,"Y":0.065708},{"X":0.8720703,"Y":0.070648454},{"X":0.8564453,"Y":0.070648454}]},"Id":38,"ParentId":6,"Type":"WORD"},{"Confidence":94.74079,"DetectedText":"72","Geometry":{"BoundingBox":{"Height":0.004940451,"Left":0.8730469,"Top":0.065708,"Width":0.0126953125},"Polygon":[{"X":0.8730469,"Y":0.065708},{"X":0.8857422,"Y":0.065708},{"X":0.8857422,"Y":0.070648454},{"X":0.8730469,"Y":0.070648454}]},"Id":39,"ParentId":6,"Type":"WORD"},{"Confidence":64.30509,"DetectedText":"Tomorrow","Geometry":{"BoundingBox":{"Height":0.0075371726,"Left":0.8854439,"Top":0.06454461,"Width":0.04944458},"Polygon":[{"X":0.8860201,"Y":0.06454461},{"X":0.9348885,"Y":0.065668374},{"X":0.93431234,"Y":0.07208179},{"X":0.8854439,"Y":0.070958026}]},"Id":40,"ParentId":6,"Type":"WORD"},{"Confidence":35.120876,"DetectedText":"sunny","Geometry":{"BoundingBox":{"Height":0.004940451,"Left":0.9355469,"Top":0.066202044,"Width":0.02734375},"Polygon":[{"X":0.9355469,"Y":0.066202044},{"X":0.9628906,"Y":0.066202044},{"X":0.9628906,"Y":0.071142495},{"X":0.9355469,"Y":0.071142495}]},"Id":41,"ParentId":6,"Type":"WORD"},{"Confidence":76.624756,"DetectedText":"to","Geometry":{"BoundingBox":{"Height":0.0034583157,"Left":0.9638672,"Top":0.06669609,"Width":0.0078125},"Polygon":[{"X":0.9638672,"Y":0.06669609},{"X":0.9716797,"Y":0.06669609},{"X":0.9716797,"Y":0.070154406},{"X":0.9638672,"Y":0.070154406}]},"Id":42,"ParentId":6,"Type":"WORD"},{"Confidence":89.039024,"DetectedText":"party","Geometry":{"BoundingBox":{"Height":0.0059285415,"Left":0.8232422,"Top":0.07163654,"Width":0.028320312},"Polygon":[{"X":0.8232422,"Y":0.07163654},{"X":0.8515625,"Y":0.07163654},{"X":0.8515625,"Y":0.07756508},{"X":0.8232422,"Y":0.07756508}]},"Id":43,"ParentId":7,"Type":"WORD"},{"Confidence":85.02115,"DetectedText":"cloudy","Geometry":{"BoundingBox":{"Height":0.0054344963,"Left":0.8535156,"Top":0.071142495,"Width":0.029296875},"Polygon":[{"X":0.8535156,"Y":0.071142495},{"X":0.8828125,"Y":0.071142495},{"X":0.8828125,"Y":0.07657699},{"X":0.8535156,"Y":0.07657699}]},"Id":44,"ParentId":7,"Type":"WORD"},{"Confidence":50.951458,"DetectedText":"warm","Geometry":{"BoundingBox":{"Height":0.006093815,"Left":0.88643247,"Top":0.0710728,"Width":0.027962647},"Polygon":[{"X":0.88696617,"Y":0.0710728},{"X":0.91439515,"Y":0.07176662},{"X":0.9138615,"Y":0.07716662},{"X":0.88643247,"Y":0.0764728}]},"Id":45,"ParentId":7,"Type":"WORD"},{"Confidence":63.21243,"DetectedText":"more","Geometry":{"BoundingBox":{"Height":0.0039523607,"Left":0.9169922,"Top":0.07213058,"Width":0.022460938},"Polygon":[{"X":0.9169922,"Y":0.07213058},{"X":0.9394531,"Y":0.07213058},{"X":0.9394531,"Y":0.076082945},{"X":0.9169922,"Y":0.076082945}]},"Id":46,"ParentId":7,"Type":"WORD"},{"Confidence":22.644833,"DetectedText":"human","Geometry":{"BoundingBox":{"Height":0.0054344963,"Left":0.9423828,"Top":0.071142495,"Width":0.030273438},"Polygon":[{"X":0.9423828,"Y":0.071142495},{"X":0.97265625,"Y":0.071142495},{"X":0.97265625,"Y":0.07657699},{"X":0.9423828,"Y":0.07657699}]},"Id":47,"ParentId":7,"Type":"WORD"},{"Confidence":97.40672,"DetectedText":"high","Geometry":{"BoundingBox":{"Height":0.0059285415,"Left":0.8232422,"Top":0.07657699,"Width":0.020507812},"Polygon":[{"X":0.8232422,"Y":0.07657699},{"X":0.84375,"Y":0.07657699},{"X":0.84375,"Y":0.08250553},{"X":0.8232422,"Y":0.08250553}]},"Id":48,"ParentId":8,"Type":"WORD"},{"Confidence":97.53746,"DetectedText":"90","Geometry":{"BoundingBox":{"Height":0.004446406,"Left":0.8466797,"Top":0.07756508,"Width":0.0126953125},"Polygon":[{"X":0.8466797,"Y":0.07756508},{"X":0.859375,"Y":0.07756508},{"X":0.859375,"Y":0.08201149},{"X":0.8466797,"Y":0.08201149}]},"Id":49,"ParentId":8,"Type":"WORD"},{"Confidence":97.2827,"DetectedText":"Weather","Geometry":{"BoundingBox":{"Height":0.004940451,"Left":0.8642578,"Top":0.07707103,"Width":0.036132812},"Polygon":[{"X":0.8642578,"Y":0.07707103},{"X":0.9003906,"Y":0.07707103},{"X":0.9003906,"Y":0.08201149},{"X":0.8642578,"Y":0.08201149}]},"Id":50,"ParentId":8,"Type":"WORD"},{"Confidence":76.29844,"DetectedText":"map.","Geometry":{"BoundingBox":{"Height":0.0054344963,"Left":0.9033203,"Top":0.07756508,"Width":0.022460938},"Polygon":[{"X":0.9033203,"Y":0.07756508},{"X":0.92578125,"Y":0.07756508},{"X":0.92578125,"Y":0.08299958},{"X":0.9033203,"Y":0.08299958}]},"Id":51,"ParentId":8,"Type":"WORD"},{"Confidence":84.56679,"DetectedText":"Page","Geometry":{"BoundingBox":{"Height":0.0054344963,"Left":0.92871094,"Top":0.07707103,"Width":0.022460938},"Polygon":[{"X":0.92871094,"Y":0.07707103},{"X":0.9511719,"Y":0.07707103},{"X":0.9511719,"Y":0.08250553},{"X":0.92871094,"Y":0.08250553}]},"Id":52,"ParentId":8,"Type":"WORD"},{"Confidence":64.380196,"DetectedText":"-","Geometry":{"BoundingBox":{"Height":0.0039523607,"Left":0.9550781,"Top":0.07756508,"Width":0.016601562},"Polygon":[{"X":0.9550781,"Y":0.07756508},{"X":0.9716797,"Y":0.07756508},{"X":0.9716797,"Y":0.08151744},{"X":0.9550781,"Y":0.08151744}]},"Id":53,"ParentId":8,"Type":"WORD"},{"Confidence":97.21572,"DetectedText":"VOL.CLXIV","Geometry":{"BoundingBox":{"Height":0.0059285415,"Left":0.025390625,"Top":0.09337453,"Width":0.07324219},"Polygon":[{"X":0.025390625,"Y":0.09337453},{"X":0.09863281,"Y":0.09337453},{"X":0.09863281,"Y":0.09930307},{"X":0.025390625,"Y":0.09930307}]},"Id":54,"ParentId":9,"Type":"WORD"},{"Confidence":91.00855,"DetectedText":"...","Geometry":{"BoundingBox":{"Height":0.0039523607,"Left":0.09863281,"Top":0.094856665,"Width":0.017578125},"Polygon":[{"X":0.09863281,"Y":0.094856665},{"X":0.11621094,"Y":0.094856665},{"X":0.11621094,"Y":0.09880902},{"X":0.09863281,"Y":0.09880902}]},"Id":55,"ParentId":9,"Type":"WORD"},{"Confidence":87.11527,"DetectedText":"No","Geometry":{"BoundingBox":{"Height":0.004446406,"Left":0.1171875,"Top":0.09436262,"Width":0.01953125},"Polygon":[{"X":0.1171875,"Y":0.09436262},{"X":0.13671875,"Y":0.09436262},{"X":0.13671875,"Y":0.09880902},{"X":0.1171875,"Y":0.09880902}]},"Id":56,"ParentId":9,"Type":"WORD"},{"Confidence":97.63789,"DetectedText":"56958","Geometry":{"BoundingBox":{"Height":0.0064225863,"Left":0.13867188,"Top":0.09337453,"Width":0.041992188},"Polygon":[{"X":0.13867188,"Y":0.09337453},{"X":0.18066406,"Y":0.09337453},{"X":0.18066406,"Y":0.099797115},{"X":0.13867188,"Y":0.099797115}]},"Id":57,"ParentId":9,"Type":"WORD"},{"Confidence":14.462751,"DetectedText":"e 2005","Geometry":{"BoundingBox":{"Height":0.004940451,"Left":0.21582031,"Top":0.094856665,"Width":0.02734375},"Polygon":[{"X":0.21582031,"Y":0.094856665},{"X":0.24316406,"Y":0.094856665},{"X":0.24316406,"Y":0.099797115},{"X":0.21582031,"Y":0.099797115}]},"Id":58,"ParentId":10,"Type":"WORD"},{"Confidence":97.19425,"DetectedText":"The","Geometry":{"BoundingBox":{"Height":0.0039523607,"Left":0.24414062,"Top":0.095350705,"Width":0.0146484375},"Polygon":[{"X":0.24414062,"Y":0.095350705},{"X":0.25878906,"Y":0.095350705},{"X":0.25878906,"Y":0.09930307},{"X":0.24414062,"Y":0.09930307}]},"Id":59,"ParentId":10,"Type":"WORD"},{"Confidence":87.9681,"DetectedText":"New","Geometry":{"BoundingBox":{"Height":0.0039523607,"Left":0.25878906,"Top":0.095350705,"Width":0.015625},"Polygon":[{"X":0.25878906,"Y":0.095350705},{"X":0.27441406,"Y":0.095350705},{"X":0.27441406,"Y":0.09930307},{"X":0.25878906,"Y":0.09930307}]},"Id":60,"ParentId":10,"Type":"WORD"},{"Confidence":94.71229,"DetectedText":"York","Geometry":{"BoundingBox":{"Height":0.0039523607,"Left":0.27539062,"Top":0.095350705,"Width":0.016601562},"Polygon":[{"X":0.27539062,"Y":0.095350705},{"X":0.2919922,"Y":0.095350705},{"X":0.2919922,"Y":0.09930307},{"X":0.27539062,"Y":0.09930307}]},"Id":61,"ParentId":10,"Type":"WORD"},{"Confidence":95.18016,"DetectedText":"Times","Geometry":{"BoundingBox":{"Height":0.0039523607,"Left":0.29101562,"Top":0.095350705,"Width":0.021484375},"Polygon":[{"X":0.29101562,"Y":0.095350705},{"X":0.3125,"Y":0.095350705},{"X":0.3125,"Y":0.09930307},{"X":0.29101562,"Y":0.09930307}]},"Id":62,"ParentId":10,"Type":"WORD"},{"Confidence":99.45924,"DetectedText":"NEW","Geometry":{"BoundingBox":{"Height":0.0054344963,"Left":0.38378906,"Top":0.09386857,"Width":0.030273438},"Polygon":[{"X":0.38378906,"Y":0.09386857},{"X":0.4140625,"Y":0.09386857},{"X":0.4140625,"Y":0.09930307},{"X":0.38378906,"Y":0.09930307}]},"Id":63,"ParentId":11,"Type":"WORD"},{"Confidence":52.092403,"DetectedText":"YORK.","Geometry":{"BoundingBox":{"Height":0.0064225863,"Left":0.4169922,"Top":0.09337453,"Width":0.041015625},"Polygon":[{"X":0.4169922,"Y":0.09337453},{"X":0.4580078,"Y":0.09337453},{"X":0.4580078,"Y":0.099797115},{"X":0.4169922,"Y":0.099797115}]},"Id":64,"ParentId":11,"Type":"WORD"},{"Confidence":60.50042,"DetectedText":"FRIDAY","Geometry":{"BoundingBox":{"Height":0.004940451,"Left":0.4609375,"Top":0.09436262,"Width":0.046875},"Polygon":[{"X":0.4609375,"Y":0.09436262},{"X":0.5078125,"Y":0.09436262},{"X":0.5078125,"Y":0.09930307},{"X":0.4609375,"Y":0.09930307}]},"Id":65,"ParentId":11,"Type":"WORD"},{"Confidence":98.44577,"DetectedText":"AUGUST","Geometry":{"BoundingBox":{"Height":0.0064225863,"Left":0.5126953,"Top":0.09337453,"Width":0.053710938},"Polygon":[{"X":0.5126953,"Y":0.09337453},{"X":0.56640625,"Y":0.09337453},{"X":0.56640625,"Y":0.099797115},{"X":0.5126953,"Y":0.099797115}]},"Id":66,"ParentId":11,"Type":"WORD"},{"Confidence":91.241165,"DetectedText":"142015","Geometry":{"BoundingBox":{"Height":0.0069166315,"Left":0.5683594,"Top":0.09337453,"Width":0.046875},"Polygon":[{"X":0.5683594,"Y":0.09337453},{"X":0.6152344,"Y":0.09337453},{"X":0.6152344,"Y":0.100291155},{"X":0.5683594,"Y":0.100291155}]},"Id":67,"ParentId":11,"Type":"WORD"},{"Confidence":98.32363,"DetectedText":"$2.50","Geometry":{"BoundingBox":{"Height":0.0054344963,"Left":0.9404297,"Top":0.09337453,"Width":0.032226562},"Polygon":[{"X":0.9404297,"Y":0.09337453},{"X":0.97265625,"Y":0.09337453},{"X":0.97265625,"Y":0.09880902},{"X":0.9404297,"Y":0.09880902}]},"Id":68,"ParentId":12,"Type":"WORD"}],"TextModelVersion":"3.0","ResultMetadata":{}}},"id":"image-1","type":"image"}}`;
            // aug = aug.replaceAll('""', '"');

            var sig = ``;

            this.aioToSign = aio;

            var aio_ = JSON.parse(aio);
            var aug_ = {};

            try {
              aug_ = JSON.parse(aug);
            } catch(e) {
              console.log(" > error:" + e.message)
            }

            this.aio = aio_;
            this.sig = sig;
            this.aug = aug;

            aio_.elements.forEach((item, i) => {
              if (aug_[item.id] !== undefined) {
                var augment = aug_[item.id].augment;
                item["augment"] = augment;
              }

              this.addElement(item.type, item.param, item.param, item);
            });
            aio_.recipients.forEach((item, i) => {
              this.addRecipient(item);
            });

            // app::public
            if (this.isRecipient("app::public")) {
              // public.json
              var parts = window.location.href.split("/");
              var uuid = this.uuid('author');
              var aioid = parts[parts.length - 1].replace(".htm", "");
              var cid = parts[parts.length - 2];

              var url = "https://memori.as/app::public/" + uuid + "/" + aioid + "/public.json";
              if (aioid == "indexl") {
                 url = "https://memori.as/app::public/" + cid + "/public.json";
              }

              fetch(url)
              .then(function (response) {
               // The API call was successful!
                return response.json();
              }).then(function (data) {
                M.get("#www").setAttribute("href", data.www);
                M.get("#ipfs").setAttribute("href", data.ipfs);
                M.get("#mem").setAttribute("href", data.mem);

                var cod = M.get("#cod");
                var html = cod.innerHTML;
                html = html.replace("--verify IPFS_URL", "--verify " + data.ipfs);
                cod.innerHTML = html;

                var url = M.get("#ipfs-url");
                url.innerHTML = data.ipfs;

              }).catch(function (err) {
                // There was an error
                console.warn('Something went wrong.', err);
              }).finally(() => {
              });
            }
          },
          title: function(aio) {
            return M.title(aio);
          },
          tags: function(aio) {
            return M.tags(aio);
          },
          addElement: function(type, f, name, el) {
            var controls = "";
            var element = "";
            var value = "";

            f = "assets/" + f;

            if (el === undefined) {
              this.e = this.e + 1;
            } else {
              this.e = parseInt(el.id.split("-")[1]);
              value = name;
            }

            if (type == "text") {
              controls = '<div id="controls-' + this.e + '" class="field has-addons controls"><p class="control"><a class="button is-delete is-small" onclick="removeElement(' + "'" + type + "'" + ', ' + this.e + ')" onMouseOver="highlightElement(' + "'" + type + "'" + ', ' + this.e + ')" onMouseOut="removeHighlightElement(' + "'" + type + "'" + ', ' + this.e + ')"><span class="icon is-small"><i class="fas fa-times"></i></span></a></p></div>';
              element = controls + '<textarea id="text-' + this.e + '" readonly class="element textarea" rows="1" placeholder="Type something! ex: @leozeba what are you doing?">' + value + '</textarea>';

              if (el != undefined && el.augment != undefined) {
                var tags = [];

                var cloud = el.augment.cloud;
                var words = Object.keys(cloud);
                var counts = [];
                var keys = el.augment.keys;

                for (var i = 0; i < words.length; i++) {
                  counts[i] = cloud[words[i]];
                }

                for (var i = 0; i < keys.length; i++) {
                  var parts = keys[i].split("-");
                  var count = parseInt(parts[0]);
                  var word = parts[1];
                  var tag = '<span class="tag augment-label is-medium is-rounded" style="border-bottom-left-radius: 10rem; border-top-left-radius: 10rem; padding-right: 0; font-weight: 600;">' + word + '</span><span class="tag is-medium" style="margin-right: 0.5rem; border-bottom-right-radius: 50%; border-top-right-radius: 50%;">' + count + '</span>';
                  tags.push(tag);
                }

                element = element + '<div class="control-' + this.e + '"><div id="tags-' + this.e + '" class="tags has-addons">' + tags.join("") + '</div></div>';
              }
            }

            if (type == "image") {
              controls = '<div id="controls-' + this.e + '" class="field has-addons controls"><p class="control"><a class="button is-delete is-small" onclick="removeElement(' + "'" + type + "'" + ', ' + this.e + ')" onMouseOver="highlightElement(' + "'" + type + "'" + ', ' + this.e + ')" onMouseOut="removeHighlightElement(' + "'" + type + "'" + ', ' + this.e + ')"><span class="icon is-small"><i class="fas fa-times"></i></span></a></p></div>';
              element = controls + '<img id="image-' + this.e + '" class="element image" src="' + f + '.aug"/>';

              if (el != undefined && el.augment != undefined) {
                var tags = [];

                if (el.augment.labels) {
                  var colors = el.augment.labels.ImageProperties.DominantColors;

                  for (var i = 0; i < colors.length; i++) {
                    var tag = '<span class="tag augment-label color is-medium is-rounded" style="background:' + colors[i].HexCode + ';">' + '<a href="search.html?q=' + colors[i].CSSColor + '">' + '#' + '</a>' + '</span>';
                    tags.push(tag);
                  }

                  for (var i = 0; i < colors.length; i++) {
                    var tag = '<span class="tag augment-label css is-medium is-rounded">' + '<a href="search.html?q=' + colors[i].CSSColor + '">#' + colors[i].CSSColor + '</a>' + '</span>';
                    tags.push(tag);
                  }

                  var labels = el.augment.labels.Labels;

                  for (var i = 0; i < labels.length; i++) {
                    var tag = '<span class="tag augment-label is-medium is-rounded">' + labels[i].Name + '</span>';
                    tags.push(tag);
                  }
                }

                if (el.augment.text) {
                  var text = el.augment.text.TextDetections;
                  for (var i = 0; i < text.length; i++) {
                    var tag = '<span class="tag augment-text is-medium is-rounded">' + text[i].DetectedText + '</span>';
                    if (tags.indexOf(tag) == -1) {
                      tags.push(tag);
                    }
                  }
                }

                if (el.augment.faces) {
                  var faces = el.augment.faces.FaceDetails;
                  for (var i = 0; i < faces.length; i++) {
                    var details = faces[i];
                    var keys = Object.keys(details);

                    var tag = '<span class="tag augment-face is-medium" style="background: transparent !important; border: none !important; color: var(--color-0) !important;"><span class="icon is-small"><i class="fas fa-user"></i></span></span>';
                    tags.push(tag);

                    for (var j = 0; j < keys.length; j++) {
                      var key = keys[j];

                      // AgeRange
                      if (key == "AgeRange") {
                        var detail = details[key];
                        var tag = '<span class="tag augment-face age is-medium is-rounded">' + detail.Low + '-' + detail.High + '</span>';
                        tags.push(tag);
                      }

                      // Emotions
                      if (key == "Emotions") {
                        var array = details[key];

                        for (var k = 0; k < array.length; k++) {
                          var item = array[k];
                          if (item.Type) {
                            if (item.Confidence > 70.0) {
                              var tag = '<span class="tag augment-face emotion is-medium is-rounded">' + item.Type + '</span>';
                              tags.push(tag);
                            }
                          }
                        }
                      }

                      // Gender
                      if (key == "Gender") {
                        var item = details[key];
                        if (item.Value) {
                          if (item.Confidence > 70.0) {
                            var tag = '<span class="tag augment-face gender is-medium is-rounded">' + item.Value + '</span>';
                            tags.push(tag);
                          }
                        }
                      }

                      // Landmarks
                      if (key == "Landmarks") {
                        var item = details[key];
                        // console.log(item);
                      }

                      // Pose
                      if (key == "Pose") {
                        var item = details[key];
                        // console.log(item);
                      }

                      // Quality
                      if (key == "Quality") {
                        var item = details[key];
                        // console.log(item);
                      }

                      // Beard, Eyeglasses, EyesOpen, MouthOpen, Mustache, Smile, Sunglasses
                      var value = details[key].Value;
                      if (value == true) {
                        var tag = '<span class="tag augment-face is-medium is-rounded">' + keys[j] + '</span>';
                        tags.push(tag);
                      }
                    }
                  }

                  element = element + '<div id="tags-' + this.e + '" class="tags">' + tags.join("") + '</div>';
                }
              }
            }

            if (type == "video") {
              controls = '<div id="controls-' + this.e + '" class="field has-addons controls" style="margin-bottom: 0.75rem !important;"><p class="control"><a class="button is-delete is-small" onclick="removeElement(' + "'" + type + "'" + ', ' + this.e + ')" onMouseOver="highlightElement(' + "'" + type + "'" + ', ' + this.e + ')" onMouseOut="removeHighlightElement(' + "'" + type + "'" + ', ' + this.e + ')"><span class="icon is-small"><i class="fas fa-times"></i></span></a></p></div>'
              element = controls + '<video id="video-' + this.e + '" class="element video" controls><source src="' + f + '" type="video/mp4"></video>'
            }

            if (type == "file") {
              controls = '<div id="controls-' + this.e + '" class="field has-addons controls"><p class="control"><a class="button is-delete is-small" onclick="removeElement(' + "'" + type + "'" + ', ' + this.e + ')" onMouseOver="highlightElement(' + "'" + type + "'" + ', ' + this.e + ')" onMouseOut="removeHighlightElement(' + "'" + type + "'" + ', ' + this.e + ')"><span class="icon is-small"><i class="fas fa-times"></i></span></a></p></div>';
              element = controls + '<p id="file-' + this.e + '" class="element file" style="font-size: 1.85rem;" data-name="' + (el && el.data && el.data["name"] ? el.data["name"] : name) + '" data-content="' + f + '"><a href="' + f + '"><span class="icon is-large"><i class="fas fa-paperclip fa-lg"></span></i>' + (el && el.data && el.data["name"] ? el.data["name"] : name) + '</a></p>'
            }

            var elements = M.get("#elements");
            elements.insertAdjacentHTML("beforeend", element);

            // Wordcloud
            if (counts !== undefined) {
              var id = this.e;
              var max = counts.reduce(function(a, b) {
                return Math.max(a, b);
              });
              var containerWidth = +d3.select(".container").style("width").slice(0, -2);
              var cssFill = getComputedStyle(M.get("body")).getPropertyValue("--color-0");
              var layout = d3.layout.cloud()
                .size([containerWidth, 500])
                .words(words.map(function(d, index) {
                  return {text: d, size: (cloud[d] / max) * 90, test: "haha"};
                }))
                .padding(5)
                .rotate(function() { return ~~(Math.random() * 2) * 90; })
                .font("Impact")
                .fontSize(function(d) { return d.size; })
                .on("end", function draw(words) {
                  d3.select(".control-" + id)
                  .append("svg")
                  .attr("width", containerWidth)
                  .attr("height", layout.size()[1])
                  .append("g")
                  .attr("transform", "translate(" + layout.size()[0] / 2 + "," + layout.size()[1] / 2 + ")")
                  .selectAll("text")
                  .data(words)
                  .enter()
                  .append("text")
                  .style("font-size", function(d) { return d.size + "px"; })
                  .style("font-family", "Impact")
                  .style("fill", cssFill)
                  .attr("text-anchor", "middle")
                  .attr("transform", function(d) {
                    return "translate(" + [d.x, d.y] + ")rotate(" + d.rotate + ")";
                  })
                  .text(function(d) { return d.text; });
                });
              layout.start();
            }

            autosize(document.querySelectorAll("textarea"));

            // this.showControls("#controls-" + this.e);
            this.focusOn("#" + type + "-" + this.e);
          },
          focusOn: function(element) {
            M.get(element).focus();
          },
          rotate: function() {
            var el = M.get(".element.image");
            if (el !== undefined) {
              var transform = el.style.transform;
              console.log(transform);
              if (transform.indexOf("-90") > 0) {
                transform = "rotate(-180deg)";
              } else if (transform.indexOf("-180") > 0) {
                transform = "rotate(-270deg)";
              } else if (transform.indexOf("-270") > 0) {
                transform = "rotate(0deg)";
              } else {
                transform = "rotate(-90deg)";
              }
              el.style.transform = transform;
            }
          },
          uuid: function(type) {
            if (type == "author") {
              return this.aio.author;
            }
            return M.storage("memori.as-m-uuid");
          },
          addRecipient: function(uuid) {
            for (var i = 0; i < this.accounts.length; i++) {
              var account = this.accounts[i];
              if (account.auid == uuid) {
                this.accounts.splice(i, 1);
                this.recipients.push(account);
                break;
              }
            }
          },
          isRecipient: function(account) {
            var isRecipient = false;
            for (var i = 0; i < this.aio.recipients.length; i++) {
              var recipient = this.aio.recipients[i];
              if (recipient == account) {
                isRecipient = true;
                break;
              }
            }
            if (isRecipient == false) {
              if (this.uuid() == account) {
                isRecipient = true;
              }
            }
            return isRecipient;
          },
          accountPicture: function(recipient) {
            var a = "assets/recipient--" + recipient.replace("::", "--") + "-picture.png";
            return a;
          },
          account: function(account) {
            var r;
            for (var i = 0; i < this.accounts.length; i++) {
              var recipient = this.accounts[i];
              if (recipient["m-auid"] == account) {
                r = recipient;
                break;
              }
            }
            if (r == undefined) {
              r = {};
            }
            return r;
          },
          picture: function() {
            return M.storage("memori.as-m-picture");
          },
          showCode: function() {
            M.get("#elements-container").style.display = "none";
            M.get("#code-container").style.display = "block";

            M.get("#show-code").style.display = "none";
            M.get("#hide-code").style.display = "block";

            var aio = JSON.stringify(JSON.parse(this.aioToSign), null, 4);
            var sig = this.sig;
            var aug = JSON.stringify(JSON.parse(this.aug), null, 4);

            M.get("#aio").innerHTML = aio;
            if (sig != "") {
              M.get("#sig").innerHTML = sig;
            }
            if (aug != "") {
              M.get("#aug").innerHTML = aug;
            }
          },
          hideCode: function() {
            M.get("#elements-container").style.display = "block";
            M.get("#code-container").style.display = "none";

            M.get("#show-code").style.display = "block";
            M.get("#hide-code").style.display = "none";
          },
          replyProfileImageUrl: function(reply) {
            var author = this.replyAuthor(reply);
            return this.accountPicture(author);
          },
          replyAuthor: function(reply) {
            var author = "";
            var parts = reply.split("&");
            for (var i = 0; i < parts.length; i++) {
              var p = parts[i];
              if (p.indexOf("author=") >= 0) {
                author = p.replace("author=", "");
                break;
              }
            }

            return author;
          },
          replyUpdated: function(reply) {
            var updated = "";
            var parts = reply.split("&");
            for (var i = 0; i < parts.length; i++) {
              var p = parts[i];
              if (p.indexOf("updated=") >= 0) {
                updated = p.replace("updated=", "");
                break;
              }
            }

            return updated;
          },
          replyTitle: function(reply) {
            var title = "";
            var parts = reply.split("&");
            for (var i = 0; i < parts.length; i++) {
              var p = parts[i];
              if (p.indexOf("title=") >= 0) {
                title = p.replace("title=", "");
                break;
              }
            }

            return title.split(" #")[0];
          },
          replyAio: function(reply) {
            var aio = "";
            var parts = reply.split("&");
            for (var i = 0; i < parts.length; i++) {
              var p = parts[i];
              if (p.indexOf("aio=") >= 0) {
                aio = p.replace("aio=", "");
                break;
              }
            }

            return aio;
          },
          showContent: function() {
            M.get("#the-content").style.display = "block";

            M.get("#hide-content").style.display = "inline";
            M.get("#show-content").style.display = "none";
          },
          hideContent: function() {
            M.get("#the-content").style.display = "none";

            M.get("#hide-content").style.display = "none";
            M.get("#show-content").style.display = "inline";
          }
        },
        mounted() {
          this.minit();
          var message = M.params("message");
          if (message !== null) {
            M.showMessage("#app", "is-success", message);
          }
        },
        updated() {
        }
      });
    });
  </script>

  <script>
    M.theme();
  </script>

</body>
</html>
